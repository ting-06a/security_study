"""
爬取 https://aiqicha.baidu.com/
- 在爱企查搜索进入要查询的企业，复制url处的一串数字，该值为pid
- 输出结果会放在aiqicha.txt里面
"""
import requests
import time,random

pid=input("请输入企业对应的pid:")


url=f"https://aiqicha.baidu.com/cs/icpInfoAjax?pid={pid}&p=1"

headers={
    "Host":"aiqicha.baidu.com",
    "Cookie": 'BIDUPSID=43AFC6D238F260577E813FDEB6B8F84B; PSTM=1733042993; BAIDUID=3DA8C66F349EFF4A41BC22E57242630E:FG=1; BAIDUID_BFESS=3DA8C66F349EFF4A41BC22E57242630E:FG=1; BAIDU_WISE_UID=wapp_1737531444466_735; BDUSS=0NuMkRPYTdTVHpFN2s3aTFrMXV4SnZrUXRncEM1TFJ1ZlIzV35mR0V1UUs2YnRuSVFBQUFBJCQAAAAAAAAAAAEAAAAwAYz-c3RhcnJ5NzM3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApclGcKXJRnN; BDUSS_BFESS=0NuMkRPYTdTVHpFN2s3aTFrMXV4SnZrUXRncEM1TFJ1ZlIzV35mR0V1UUs2YnRuSVFBQUFBJCQAAAAAAAAAAAEAAAAwAYz-c3RhcnJ5NzM3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApclGcKXJRnN; H_WISE_SIDS=60277_61027_62282_62325_62344_62345_62330_62248_62390_62421_62423_62427_62496_62485_62492_62456_62454_62452_62450_62553; __bid_n=196bd263f8f7536dd2d7b0; ZFY=XQiPuWIxUVwi5eRfilJzzgYaj2h:B1plJrj:BHjUSVqJM:C; BDPPN=3deeb73eec0384706c8dfbaffbc7678b; _t4z_qc8_=xlTM-TogKuTw2Cw9sOHBmvLltqoDumcoNgmd; H_WISE_SIDS_BFESS=60277_61027_62282_62325_62344_62345_62330_62248_62390_62421_62423_62427_62496_62485_62492_62456_62454_62452_62450_62553; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%22439260656%3A0%22%2C%22first_id%22%3A%221973e1c506d38f-0f4f39197ea165-26011e51-1307592-1973e1c506e1999%22%2C%22props%22%3A%7B%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMTk3M2UxYzUwNmQzOGYtMGY0ZjM5MTk3ZWExNjUtMjYwMTFlNTEtMTMwNzU5Mi0xOTczZTFjNTA2ZTE5OTkiLCIkaWRlbnRpdHlfbG9naW5faWQiOiI0MzkyNjA2NTY6MCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%24identity_login_id%22%2C%22value%22%3A%22439260656%3A0%22%7D%2C%22%24device_id%22%3A%221973e1c506d38f-0f4f39197ea165-26011e51-1307592-1973e1c506e1999%22%7D; _j47_ka8_=57; H_PS_PSSID=60277_62325_63140_63324_63881_63948_64008_64009_64090_64126_64140_64163_64174_64182_64214_64247_64253_64258_64260_64280_64318_64341; login_type=passport; Hm_lvt_ad52b306e1ae4557f5d3534cce8f8bbf=1756174031; HMACCOUNT=F0B5F670AF972BAF; in_source=; log_first_time=1756174031884; _fb537_=xlTM-TogKuTwnTTLwAidBzxxNNtS95vqp-MPM5c6qUAmmd; Hm_lpvt_ad52b306e1ae4557f5d3534cce8f8bbf=1756174156; ab175617360=46cae0dd08938d7a7a21e721786b92c21756174184847; ab_sr=1.0.1_NjAxYzJkNjg4NjIxMWFmMmRmOTI0MjA0NDE1N2RiNzQyMmM5MjMwOWFjNjVjNzE4NmNmMDc5YmNkOTA0Y2JlYTM1YTJiMzk2Y2M5MTgxNjZiMDdjMzE0OGY0Yzk1MzNkNzNhNzgwYzJmYzUyMDA5YzBkYjdlZjIwMGE0YThjMGQwMTYwOWQ0ODgxODU3ODVhYTZhNzFiNTI1YTlmYjcyNQ==; _s53_d91_=7c6b2f740af33a6ebcf58b0534eebd273ffc11ddbacb1c1dbcf3d685e1056ddfc60b27f23f3f3825843e63c4da9fef11dc9f8eecdf1455e9430c65c7a599bbce68931da71ad86f537d2ea52d05cd16335751b56b2fcff0da4b7a9a3ac05559f671e35ab537bc8ca88607414025fd2f290c6d83e25a7946adc19c5d09748b9697612f5e50b9c7756fdc67831faba655361687d2c121416befc452bb9bb2da8d8af6ce197b73dfd8e7ea77809de339801b3bb1d2c9f52ee7e99d201897748b638209eeb7785cc3ef4be1474605b97f8ae6; _y18_s21_=5b04465f; RT="z=1&dm=baidu.com&si=abfd1efc-fe81-4fff-8eac-9c0166e1c8eb&ss=merwnd1d&sl=a&tt=2bb5&bcn=https%3A%2F%2Ffclog.baidu.com%2Flog%2Fweirwood%3Ftype%3Dperf&ld=52op&nu=9y8m6cy&cl=4buu"; log_last_time=1756174257100',
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36",
    "Referer": f"https://aiqicha.baidu.com/company_detail_{pid}?tab=certRecord"
}

res=requests.get(url,headers=headers)
# print(res.json())   若运行出错可以打印出来看看；
totalNum=res.json()['data']['totalNum']
pageNum=totalNum//10+1     #获取一共要查询多少页

url_list=[]

def getUrl(i):
    url = f"https://aiqicha.baidu.com/cs/icpInfoAjax?pid={pid}&p={i}"

    headers = {
        "Host": "aiqicha.baidu.com",
        "Cookie": 'BIDUPSID=43AFC6D238F260577E813FDEB6B8F84B; PSTM=1733042993; BAIDUID=3DA8C66F349EFF4A41BC22E57242630E:FG=1; BAIDUID_BFESS=3DA8C66F349EFF4A41BC22E57242630E:FG=1; BAIDU_WISE_UID=wapp_1737531444466_735; BDUSS=0NuMkRPYTdTVHpFN2s3aTFrMXV4SnZrUXRncEM1TFJ1ZlIzV35mR0V1UUs2YnRuSVFBQUFBJCQAAAAAAAAAAAEAAAAwAYz-c3RhcnJ5NzM3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApclGcKXJRnN; BDUSS_BFESS=0NuMkRPYTdTVHpFN2s3aTFrMXV4SnZrUXRncEM1TFJ1ZlIzV35mR0V1UUs2YnRuSVFBQUFBJCQAAAAAAAAAAAEAAAAwAYz-c3RhcnJ5NzM3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApclGcKXJRnN; H_WISE_SIDS=60277_61027_62282_62325_62344_62345_62330_62248_62390_62421_62423_62427_62496_62485_62492_62456_62454_62452_62450_62553; __bid_n=196bd263f8f7536dd2d7b0; ZFY=XQiPuWIxUVwi5eRfilJzzgYaj2h:B1plJrj:BHjUSVqJM:C; BDPPN=3deeb73eec0384706c8dfbaffbc7678b; _t4z_qc8_=xlTM-TogKuTw2Cw9sOHBmvLltqoDumcoNgmd; H_WISE_SIDS_BFESS=60277_61027_62282_62325_62344_62345_62330_62248_62390_62421_62423_62427_62496_62485_62492_62456_62454_62452_62450_62553; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%22439260656%3A0%22%2C%22first_id%22%3A%221973e1c506d38f-0f4f39197ea165-26011e51-1307592-1973e1c506e1999%22%2C%22props%22%3A%7B%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfY29va2llX2lkIjoiMTk3M2UxYzUwNmQzOGYtMGY0ZjM5MTk3ZWExNjUtMjYwMTFlNTEtMTMwNzU5Mi0xOTczZTFjNTA2ZTE5OTkiLCIkaWRlbnRpdHlfbG9naW5faWQiOiI0MzkyNjA2NTY6MCJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%24identity_login_id%22%2C%22value%22%3A%22439260656%3A0%22%7D%2C%22%24device_id%22%3A%221973e1c506d38f-0f4f39197ea165-26011e51-1307592-1973e1c506e1999%22%7D; _j47_ka8_=57; H_PS_PSSID=60277_62325_63140_63324_63881_63948_64008_64009_64090_64126_64140_64163_64174_64182_64214_64247_64253_64258_64260_64280_64318_64341; login_type=passport; Hm_lvt_ad52b306e1ae4557f5d3534cce8f8bbf=1756174031; HMACCOUNT=F0B5F670AF972BAF; in_source=; log_first_time=1756174031884; _fb537_=xlTM-TogKuTwnTTLwAidBzxxNNtS95vqp-MPM5c6qUAmmd; Hm_lpvt_ad52b306e1ae4557f5d3534cce8f8bbf=1756174156; ab175617360=46cae0dd08938d7a7a21e721786b92c21756174184847; ab_sr=1.0.1_NjAxYzJkNjg4NjIxMWFmMmRmOTI0MjA0NDE1N2RiNzQyMmM5MjMwOWFjNjVjNzE4NmNmMDc5YmNkOTA0Y2JlYTM1YTJiMzk2Y2M5MTgxNjZiMDdjMzE0OGY0Yzk1MzNkNzNhNzgwYzJmYzUyMDA5YzBkYjdlZjIwMGE0YThjMGQwMTYwOWQ0ODgxODU3ODVhYTZhNzFiNTI1YTlmYjcyNQ==; _s53_d91_=7c6b2f740af33a6ebcf58b0534eebd273ffc11ddbacb1c1dbcf3d685e1056ddfc60b27f23f3f3825843e63c4da9fef11dc9f8eecdf1455e9430c65c7a599bbce68931da71ad86f537d2ea52d05cd16335751b56b2fcff0da4b7a9a3ac05559f671e35ab537bc8ca88607414025fd2f290c6d83e25a7946adc19c5d09748b9697612f5e50b9c7756fdc67831faba655361687d2c121416befc452bb9bb2da8d8af6ce197b73dfd8e7ea77809de339801b3bb1d2c9f52ee7e99d201897748b638209eeb7785cc3ef4be1474605b97f8ae6; _y18_s21_=5b04465f; RT="z=1&dm=baidu.com&si=abfd1efc-fe81-4fff-8eac-9c0166e1c8eb&ss=merwnd1d&sl=a&tt=2bb5&bcn=https%3A%2F%2Ffclog.baidu.com%2Flog%2Fweirwood%3Ftype%3Dperf&ld=52op&nu=9y8m6cy&cl=4buu"; log_last_time=1756174257100',
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36",
        "Referer": f"https://aiqicha.baidu.com/company_detail_{pid}?tab=certRecord"
    }

    res = requests.get(url, headers=headers)
    content = res.json()["data"]["list"]
#    print(content)  可以查看结构，发现嵌套了两层
    for item in content:
        for domain in item['domain']:
            url_list.append(domain+'\n')

for i in range(1,pageNum+1):
    delay=random.uniform(1,3)
    print(f"让我睡一会哈，等会就爬取第{i}页")
    time.sleep(delay)                         #减少需要人机验证的几率
    getUrl(i)

with open("aiqicha.txt","w",encoding='utf-8') as f:
    f.writelines(url_list)